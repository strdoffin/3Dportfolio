'use client';
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: maxpanysh (https://sketchfab.com/maxpanysh)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/silent-ash-bc44272e8c1047148b33c913e659fcfa
Title: Silent Ash
*/
import * as THREE from 'three';
import React, { useRef, useEffect, useState } from 'react';
import { useGLTF } from '@react-three/drei'; // Import OrbitControls
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
  };
  materials: {
    Bunny: THREE.MeshStandardMaterial;
    Skateboard: THREE.MeshStandardMaterial;
  };
};

export function Rabbit(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/model/scene-transformed.glb') as GLTFResult;
  const modelRef = useRef<THREE.Group>(null);
  
  // Store rotation as THREE.Euler
  const [rotation, setRotation] = useState(new THREE.Euler(0, 0, 0));

  useEffect(() => {
    const handleScroll = () => {
      const scrollY = window.scrollY; // Get vertical scroll position
      // Update rotation based on scroll position
      setRotation(new THREE.Euler(0, scrollY * 0.01, 0)); // Adjust the multiplier for desired effect
    };

    window.addEventListener('scroll', handleScroll);

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []);

  return (
    <group
      {...props}
      dispose={null}
      ref={modelRef}
      position={[0, -2.5, 0]}
      scale={3}
      rotation={rotation}
      
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_4.geometry}
        material={materials.Bunny}
        position={[0.001, 1.041, 0.001]}
        scale={0.398}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_5.geometry}
        material={materials.Skateboard}
        position={[0.001, 1.041, 0.001]}
        scale={0.398}
      />
    </group>
  );
}

useGLTF.preload('/model/scene-transformed.glb');
